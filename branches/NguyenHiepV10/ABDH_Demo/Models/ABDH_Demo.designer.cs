#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABDH_Demo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Library")]
	public partial class ABDH_DemoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblDinhKem(tblDinhKem instance);
    partial void UpdatetblDinhKem(tblDinhKem instance);
    partial void DeletetblDinhKem(tblDinhKem instance);
    partial void InserttblUserGroup(tblUserGroup instance);
    partial void UpdatetblUserGroup(tblUserGroup instance);
    partial void DeletetblUserGroup(tblUserGroup instance);
    partial void InserttblDocument(tblDocument instance);
    partial void UpdatetblDocument(tblDocument instance);
    partial void DeletetblDocument(tblDocument instance);
    partial void InserttblGui(tblGui instance);
    partial void UpdatetblGui(tblGui instance);
    partial void DeletetblGui(tblGui instance);
    partial void InserttblNew(tblNew instance);
    partial void UpdatetblNew(tblNew instance);
    partial void DeletetblNew(tblNew instance);
    partial void InserttblNgonNgu(tblNgonNgu instance);
    partial void UpdatetblNgonNgu(tblNgonNgu instance);
    partial void DeletetblNgonNgu(tblNgonNgu instance);
    partial void InserttblNgonNguTL(tblNgonNguTL instance);
    partial void UpdatetblNgonNguTL(tblNgonNguTL instance);
    partial void DeletetblNgonNguTL(tblNgonNguTL instance);
    partial void InserttblNhomTaiLieu(tblNhomTaiLieu instance);
    partial void UpdatetblNhomTaiLieu(tblNhomTaiLieu instance);
    partial void DeletetblNhomTaiLieu(tblNhomTaiLieu instance);
    partial void InserttblPage(tblPage instance);
    partial void UpdatetblPage(tblPage instance);
    partial void DeletetblPage(tblPage instance);
    partial void InserttblPermission(tblPermission instance);
    partial void UpdatetblPermission(tblPermission instance);
    partial void DeletetblPermission(tblPermission instance);
    partial void InserttblPhanDoan(tblPhanDoan instance);
    partial void UpdatetblPhanDoan(tblPhanDoan instance);
    partial void DeletetblPhanDoan(tblPhanDoan instance);
    partial void InserttblTacGia(tblTacGia instance);
    partial void UpdatetblTacGia(tblTacGia instance);
    partial void DeletetblTacGia(tblTacGia instance);
    partial void InserttblTaiLieu(tblTaiLieu instance);
    partial void UpdatetblTaiLieu(tblTaiLieu instance);
    partial void DeletetblTaiLieu(tblTaiLieu instance);
    partial void InserttblThaoTac(tblThaoTac instance);
    partial void UpdatetblThaoTac(tblThaoTac instance);
    partial void DeletetblThaoTac(tblThaoTac instance);
    partial void InserttblTrangThai(tblTrangThai instance);
    partial void UpdatetblTrangThai(tblTrangThai instance);
    partial void DeletetblTrangThai(tblTrangThai instance);
    partial void InserttblTuKhoa(tblTuKhoa instance);
    partial void UpdatetblTuKhoa(tblTuKhoa instance);
    partial void DeletetblTuKhoa(tblTuKhoa instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    #endregion
		
		public ABDH_DemoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LibraryConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ABDH_DemoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ABDH_DemoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ABDH_DemoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ABDH_DemoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblDinhKem> tblDinhKems
		{
			get
			{
				return this.GetTable<tblDinhKem>();
			}
		}
		
		public System.Data.Linq.Table<tblUserGroup> tblUserGroups
		{
			get
			{
				return this.GetTable<tblUserGroup>();
			}
		}
		
		public System.Data.Linq.Table<tblDocument> tblDocuments
		{
			get
			{
				return this.GetTable<tblDocument>();
			}
		}
		
		public System.Data.Linq.Table<tblGui> tblGuis
		{
			get
			{
				return this.GetTable<tblGui>();
			}
		}
		
		public System.Data.Linq.Table<tblNew> tblNews
		{
			get
			{
				return this.GetTable<tblNew>();
			}
		}
		
		public System.Data.Linq.Table<tblNgonNgu> tblNgonNgus
		{
			get
			{
				return this.GetTable<tblNgonNgu>();
			}
		}
		
		public System.Data.Linq.Table<tblNgonNguTL> tblNgonNguTLs
		{
			get
			{
				return this.GetTable<tblNgonNguTL>();
			}
		}
		
		public System.Data.Linq.Table<tblNhomTaiLieu> tblNhomTaiLieus
		{
			get
			{
				return this.GetTable<tblNhomTaiLieu>();
			}
		}
		
		public System.Data.Linq.Table<tblPage> tblPages
		{
			get
			{
				return this.GetTable<tblPage>();
			}
		}
		
		public System.Data.Linq.Table<tblPermission> tblPermissions
		{
			get
			{
				return this.GetTable<tblPermission>();
			}
		}
		
		public System.Data.Linq.Table<tblPhanDoan> tblPhanDoans
		{
			get
			{
				return this.GetTable<tblPhanDoan>();
			}
		}
		
		public System.Data.Linq.Table<tblTacGia> tblTacGias
		{
			get
			{
				return this.GetTable<tblTacGia>();
			}
		}
		
		public System.Data.Linq.Table<tblTaiLieu> tblTaiLieus
		{
			get
			{
				return this.GetTable<tblTaiLieu>();
			}
		}
		
		public System.Data.Linq.Table<tblThaoTac> tblThaoTacs
		{
			get
			{
				return this.GetTable<tblThaoTac>();
			}
		}
		
		public System.Data.Linq.Table<tblTrangThai> tblTrangThais
		{
			get
			{
				return this.GetTable<tblTrangThai>();
			}
		}
		
		public System.Data.Linq.Table<tblTuKhoa> tblTuKhoas
		{
			get
			{
				return this.GetTable<tblTuKhoa>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
	}
	
	[Table(Name="dbo.tblDinhKem")]
	public partial class tblDinhKem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DinhKemID;
		
		private int _TaiLieuID;
		
		private System.Nullable<int> _TaiLieuDinhKemID;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDinhKemIDChanging(int value);
    partial void OnDinhKemIDChanged();
    partial void OnTaiLieuIDChanging(int value);
    partial void OnTaiLieuIDChanged();
    partial void OnTaiLieuDinhKemIDChanging(System.Nullable<int> value);
    partial void OnTaiLieuDinhKemIDChanged();
    #endregion
		
		public tblDinhKem()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			OnCreated();
		}
		
		[Column(Storage="_DinhKemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DinhKemID
		{
			get
			{
				return this._DinhKemID;
			}
			set
			{
				if ((this._DinhKemID != value))
				{
					this.OnDinhKemIDChanging(value);
					this.SendPropertyChanging();
					this._DinhKemID = value;
					this.SendPropertyChanged("DinhKemID");
					this.OnDinhKemIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuID", DbType="Int NOT NULL")]
		public int TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuDinhKemID", DbType="Int")]
		public System.Nullable<int> TaiLieuDinhKemID
		{
			get
			{
				return this._TaiLieuDinhKemID;
			}
			set
			{
				if ((this._TaiLieuDinhKemID != value))
				{
					this.OnTaiLieuDinhKemIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuDinhKemID = value;
					this.SendPropertyChanged("TaiLieuDinhKemID");
					this.OnTaiLieuDinhKemIDChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblDinhKem", Storage="_tblTaiLieu", ThisKey="TaiLieuID", OtherKey="TaiLieuID", IsForeignKey=true)]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblDinhKems.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblDinhKems.Add(this);
						this._TaiLieuID = value.TaiLieuID;
					}
					else
					{
						this._TaiLieuID = default(int);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblUserGroup")]
	public partial class tblUserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserGroupID;
		
		private string _UserGroupName;
		
		private byte _UserGroupStatus;
		
		private byte _UserGroupType;
		
		private EntitySet<tblPermission> _tblPermissions;
		
		private EntitySet<tblUser> _tblUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserGroupIDChanging(int value);
    partial void OnUserGroupIDChanged();
    partial void OnUserGroupNameChanging(string value);
    partial void OnUserGroupNameChanged();
    partial void OnUserGroupStatusChanging(byte value);
    partial void OnUserGroupStatusChanged();
    partial void OnUserGroupTypeChanging(byte value);
    partial void OnUserGroupTypeChanged();
    #endregion
		
		public tblUserGroup()
		{
			this._tblPermissions = new EntitySet<tblPermission>(new Action<tblPermission>(this.attach_tblPermissions), new Action<tblPermission>(this.detach_tblPermissions));
			this._tblUsers = new EntitySet<tblUser>(new Action<tblUser>(this.attach_tblUsers), new Action<tblUser>(this.detach_tblUsers));
			OnCreated();
		}
		
		[Column(Storage="_UserGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserGroupID
		{
			get
			{
				return this._UserGroupID;
			}
			set
			{
				if ((this._UserGroupID != value))
				{
					this.OnUserGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserGroupID = value;
					this.SendPropertyChanged("UserGroupID");
					this.OnUserGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserGroupName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserGroupName
		{
			get
			{
				return this._UserGroupName;
			}
			set
			{
				if ((this._UserGroupName != value))
				{
					this.OnUserGroupNameChanging(value);
					this.SendPropertyChanging();
					this._UserGroupName = value;
					this.SendPropertyChanged("UserGroupName");
					this.OnUserGroupNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserGroupStatus", DbType="TinyInt NOT NULL")]
		public byte UserGroupStatus
		{
			get
			{
				return this._UserGroupStatus;
			}
			set
			{
				if ((this._UserGroupStatus != value))
				{
					this.OnUserGroupStatusChanging(value);
					this.SendPropertyChanging();
					this._UserGroupStatus = value;
					this.SendPropertyChanged("UserGroupStatus");
					this.OnUserGroupStatusChanged();
				}
			}
		}
		
		[Column(Storage="_UserGroupType", DbType="TinyInt NOT NULL")]
		public byte UserGroupType
		{
			get
			{
				return this._UserGroupType;
			}
			set
			{
				if ((this._UserGroupType != value))
				{
					this.OnUserGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._UserGroupType = value;
					this.SendPropertyChanged("UserGroupType");
					this.OnUserGroupTypeChanged();
				}
			}
		}
		
		[Association(Name="tblUserGroup_tblPermission", Storage="_tblPermissions", ThisKey="UserGroupID", OtherKey="UserGroupID")]
		public EntitySet<tblPermission> tblPermissions
		{
			get
			{
				return this._tblPermissions;
			}
			set
			{
				this._tblPermissions.Assign(value);
			}
		}
		
		[Association(Name="tblUserGroup_tblUser", Storage="_tblUsers", ThisKey="UserGroupID", OtherKey="UserGroupID")]
		public EntitySet<tblUser> tblUsers
		{
			get
			{
				return this._tblUsers;
			}
			set
			{
				this._tblUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPermissions(tblPermission entity)
		{
			this.SendPropertyChanging();
			entity.tblUserGroup = this;
		}
		
		private void detach_tblPermissions(tblPermission entity)
		{
			this.SendPropertyChanging();
			entity.tblUserGroup = null;
		}
		
		private void attach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUserGroup = this;
		}
		
		private void detach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUserGroup = null;
		}
	}
	
	[Table(Name="dbo.tblDocument")]
	public partial class tblDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private string _DocumentType;
		
		private System.Nullable<double> _DocSize;
		
		private int _ReferrenceID;
		
		private string _DocumentName;
		
		private string _UploadedBy;
		
		private System.DateTime _UploadedDate;
		
		private System.Data.Linq.Binary _Content;
		
		private string _Extension;
		
		private string _FileName;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnDocumentTypeChanging(string value);
    partial void OnDocumentTypeChanged();
    partial void OnDocSizeChanging(System.Nullable<double> value);
    partial void OnDocSizeChanged();
    partial void OnReferrenceIDChanging(int value);
    partial void OnReferrenceIDChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnUploadedByChanging(string value);
    partial void OnUploadedByChanged();
    partial void OnUploadedDateChanging(System.DateTime value);
    partial void OnUploadedDateChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public tblDocument()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			OnCreated();
		}
		
		[Column(Storage="_DocumentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_DocSize", DbType="Float")]
		public System.Nullable<double> DocSize
		{
			get
			{
				return this._DocSize;
			}
			set
			{
				if ((this._DocSize != value))
				{
					this.OnDocSizeChanging(value);
					this.SendPropertyChanging();
					this._DocSize = value;
					this.SendPropertyChanged("DocSize");
					this.OnDocSizeChanged();
				}
			}
		}
		
		[Column(Storage="_ReferrenceID", DbType="Int NOT NULL")]
		public int ReferrenceID
		{
			get
			{
				return this._ReferrenceID;
			}
			set
			{
				if ((this._ReferrenceID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferrenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferrenceID = value;
					this.SendPropertyChanged("ReferrenceID");
					this.OnReferrenceIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[Column(Storage="_UploadedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UploadedBy
		{
			get
			{
				return this._UploadedBy;
			}
			set
			{
				if ((this._UploadedBy != value))
				{
					this.OnUploadedByChanging(value);
					this.SendPropertyChanging();
					this._UploadedBy = value;
					this.SendPropertyChanged("UploadedBy");
					this.OnUploadedByChanged();
				}
			}
		}
		
		[Column(Storage="_UploadedDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime UploadedDate
		{
			get
			{
				return this._UploadedDate;
			}
			set
			{
				if ((this._UploadedDate != value))
				{
					this.OnUploadedDateChanging(value);
					this.SendPropertyChanging();
					this._UploadedDate = value;
					this.SendPropertyChanged("UploadedDate");
					this.OnUploadedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(50)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[Column(Storage="_FileName", DbType="VarChar(100)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblDocument", Storage="_tblTaiLieu", ThisKey="ReferrenceID", OtherKey="TaiLieuID", IsForeignKey=true)]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblDocuments.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblDocuments.Add(this);
						this._ReferrenceID = value.TaiLieuID;
					}
					else
					{
						this._ReferrenceID = default(int);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblGui")]
	public partial class tblGui : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GuiID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _TaiLieuID;
		
		private System.Nullable<byte> _Chieu;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuiIDChanging(int value);
    partial void OnGuiIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTaiLieuIDChanging(System.Nullable<int> value);
    partial void OnTaiLieuIDChanged();
    partial void OnChieuChanging(System.Nullable<byte> value);
    partial void OnChieuChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    #endregion
		
		public tblGui()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[Column(Storage="_GuiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GuiID
		{
			get
			{
				return this._GuiID;
			}
			set
			{
				if ((this._GuiID != value))
				{
					this.OnGuiIDChanging(value);
					this.SendPropertyChanging();
					this._GuiID = value;
					this.SendPropertyChanged("GuiID");
					this.OnGuiIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuID", DbType="Int")]
		public System.Nullable<int> TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_Chieu", DbType="TinyInt")]
		public System.Nullable<byte> Chieu
		{
			get
			{
				return this._Chieu;
			}
			set
			{
				if ((this._Chieu != value))
				{
					this.OnChieuChanging(value);
					this.SendPropertyChanging();
					this._Chieu = value;
					this.SendPropertyChanged("Chieu");
					this.OnChieuChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblGui", Storage="_tblTaiLieu", ThisKey="TaiLieuID", OtherKey="TaiLieuID", IsForeignKey=true)]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblGuis.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblGuis.Add(this);
						this._TaiLieuID = value.TaiLieuID;
					}
					else
					{
						this._TaiLieuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		[Association(Name="tblUser_tblGui", Storage="_tblUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblGuis.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblGuis.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblNews")]
	public partial class tblNew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsID;
		
		private string _Title;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Status;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public tblNew()
		{
			OnCreated();
		}
		
		[Column(Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="NVarChar(500)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblNgonNgu")]
	public partial class tblNgonNgu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NgonNguID;
		
		private string _TenNgonNgu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgonNguIDChanging(int value);
    partial void OnNgonNguIDChanged();
    partial void OnTenNgonNguChanging(string value);
    partial void OnTenNgonNguChanged();
    #endregion
		
		public tblNgonNgu()
		{
			OnCreated();
		}
		
		[Column(Storage="_NgonNguID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NgonNguID
		{
			get
			{
				return this._NgonNguID;
			}
			set
			{
				if ((this._NgonNguID != value))
				{
					this.OnNgonNguIDChanging(value);
					this.SendPropertyChanging();
					this._NgonNguID = value;
					this.SendPropertyChanged("NgonNguID");
					this.OnNgonNguIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenNgonNgu", DbType="NVarChar(100)")]
		public string TenNgonNgu
		{
			get
			{
				return this._TenNgonNgu;
			}
			set
			{
				if ((this._TenNgonNgu != value))
				{
					this.OnTenNgonNguChanging(value);
					this.SendPropertyChanging();
					this._TenNgonNgu = value;
					this.SendPropertyChanged("TenNgonNgu");
					this.OnTenNgonNguChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblNgonNguTL")]
	public partial class tblNgonNguTL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NgonNguTLID;
		
		private System.Nullable<int> _TaiLieuID;
		
		private string _TenNgonNgu;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgonNguTLIDChanging(int value);
    partial void OnNgonNguTLIDChanged();
    partial void OnTaiLieuIDChanging(System.Nullable<int> value);
    partial void OnTaiLieuIDChanged();
    partial void OnTenNgonNguChanging(string value);
    partial void OnTenNgonNguChanged();
    #endregion
		
		public tblNgonNguTL()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			OnCreated();
		}
		
		[Column(Storage="_NgonNguTLID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NgonNguTLID
		{
			get
			{
				return this._NgonNguTLID;
			}
			set
			{
				if ((this._NgonNguTLID != value))
				{
					this.OnNgonNguTLIDChanging(value);
					this.SendPropertyChanging();
					this._NgonNguTLID = value;
					this.SendPropertyChanged("NgonNguTLID");
					this.OnNgonNguTLIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuID", DbType="Int")]
		public System.Nullable<int> TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenNgonNgu", DbType="NVarChar(50)")]
		public string TenNgonNgu
		{
			get
			{
				return this._TenNgonNgu;
			}
			set
			{
				if ((this._TenNgonNgu != value))
				{
					this.OnTenNgonNguChanging(value);
					this.SendPropertyChanging();
					this._TenNgonNgu = value;
					this.SendPropertyChanged("TenNgonNgu");
					this.OnTenNgonNguChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblNgonNguTL", Storage="_tblTaiLieu", ThisKey="TaiLieuID", OtherKey="TaiLieuID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblNgonNguTLs.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblNgonNguTLs.Add(this);
						this._TaiLieuID = value.TaiLieuID;
					}
					else
					{
						this._TaiLieuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblNhomTaiLieu")]
	public partial class tblNhomTaiLieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhomTaiLieuID;
		
		private string _MaNhomTaiLieu;
		
		private string _TenNhomTaiLieu;
		
		private string _MoTa;
		
		private EntitySet<tblTaiLieu> _tblTaiLieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhomTaiLieuIDChanging(int value);
    partial void OnNhomTaiLieuIDChanged();
    partial void OnMaNhomTaiLieuChanging(string value);
    partial void OnMaNhomTaiLieuChanged();
    partial void OnTenNhomTaiLieuChanging(string value);
    partial void OnTenNhomTaiLieuChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public tblNhomTaiLieu()
		{
			this._tblTaiLieus = new EntitySet<tblTaiLieu>(new Action<tblTaiLieu>(this.attach_tblTaiLieus), new Action<tblTaiLieu>(this.detach_tblTaiLieus));
			OnCreated();
		}
		
		[Column(Storage="_NhomTaiLieuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NhomTaiLieuID
		{
			get
			{
				return this._NhomTaiLieuID;
			}
			set
			{
				if ((this._NhomTaiLieuID != value))
				{
					this.OnNhomTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._NhomTaiLieuID = value;
					this.SendPropertyChanged("NhomTaiLieuID");
					this.OnNhomTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaNhomTaiLieu", DbType="VarChar(50)")]
		public string MaNhomTaiLieu
		{
			get
			{
				return this._MaNhomTaiLieu;
			}
			set
			{
				if ((this._MaNhomTaiLieu != value))
				{
					this.OnMaNhomTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._MaNhomTaiLieu = value;
					this.SendPropertyChanged("MaNhomTaiLieu");
					this.OnMaNhomTaiLieuChanged();
				}
			}
		}
		
		[Column(Storage="_TenNhomTaiLieu", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNhomTaiLieu
		{
			get
			{
				return this._TenNhomTaiLieu;
			}
			set
			{
				if ((this._TenNhomTaiLieu != value))
				{
					this.OnTenNhomTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._TenNhomTaiLieu = value;
					this.SendPropertyChanged("TenNhomTaiLieu");
					this.OnTenNhomTaiLieuChanged();
				}
			}
		}
		
		[Column(Storage="_MoTa", DbType="NVarChar(200)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[Association(Name="tblNhomTaiLieu_tblTaiLieu", Storage="_tblTaiLieus", ThisKey="NhomTaiLieuID", OtherKey="NhomTaiLieuID")]
		public EntitySet<tblTaiLieu> tblTaiLieus
		{
			get
			{
				return this._tblTaiLieus;
			}
			set
			{
				this._tblTaiLieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblTaiLieus(tblTaiLieu entity)
		{
			this.SendPropertyChanging();
			entity.tblNhomTaiLieu = this;
		}
		
		private void detach_tblTaiLieus(tblTaiLieu entity)
		{
			this.SendPropertyChanging();
			entity.tblNhomTaiLieu = null;
		}
	}
	
	[Table(Name="dbo.tblPage")]
	public partial class tblPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageID;
		
		private string _PageName;
		
		private string _PageDesc;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<tblPermission> _tblPermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnPageDescChanging(string value);
    partial void OnPageDescChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public tblPage()
		{
			this._tblPermissions = new EntitySet<tblPermission>(new Action<tblPermission>(this.attach_tblPermissions), new Action<tblPermission>(this.detach_tblPermissions));
			OnCreated();
		}
		
		[Column(Storage="_PageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_PageName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[Column(Storage="_PageDesc", DbType="NVarChar(1024)")]
		public string PageDesc
		{
			get
			{
				return this._PageDesc;
			}
			set
			{
				if ((this._PageDesc != value))
				{
					this.OnPageDescChanging(value);
					this.SendPropertyChanging();
					this._PageDesc = value;
					this.SendPropertyChanged("PageDesc");
					this.OnPageDescChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Association(Name="tblPage_tblPermission", Storage="_tblPermissions", ThisKey="PageID", OtherKey="PageID")]
		public EntitySet<tblPermission> tblPermissions
		{
			get
			{
				return this._tblPermissions;
			}
			set
			{
				this._tblPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPermissions(tblPermission entity)
		{
			this.SendPropertyChanging();
			entity.tblPage = this;
		}
		
		private void detach_tblPermissions(tblPermission entity)
		{
			this.SendPropertyChanging();
			entity.tblPage = null;
		}
	}
	
	[Table(Name="dbo.tblPermission")]
	public partial class tblPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionID;
		
		private int _PageID;
		
		private int _UserGroupID;
		
		private bool _ViewRight;
		
		private bool _InsertRight;
		
		private bool _UpdateRight;
		
		private bool _DeleteRight;
		
		private bool _ApproveRight;
		
		private EntityRef<tblPage> _tblPage;
		
		private EntityRef<tblUserGroup> _tblUserGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnUserGroupIDChanging(int value);
    partial void OnUserGroupIDChanged();
    partial void OnViewRightChanging(bool value);
    partial void OnViewRightChanged();
    partial void OnInsertRightChanging(bool value);
    partial void OnInsertRightChanged();
    partial void OnUpdateRightChanging(bool value);
    partial void OnUpdateRightChanged();
    partial void OnDeleteRightChanging(bool value);
    partial void OnDeleteRightChanged();
    partial void OnApproveRightChanging(bool value);
    partial void OnApproveRightChanged();
    #endregion
		
		public tblPermission()
		{
			this._tblPage = default(EntityRef<tblPage>);
			this._tblUserGroup = default(EntityRef<tblUserGroup>);
			OnCreated();
		}
		
		[Column(Storage="_PermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[Column(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._tblPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserGroupID", DbType="Int NOT NULL")]
		public int UserGroupID
		{
			get
			{
				return this._UserGroupID;
			}
			set
			{
				if ((this._UserGroupID != value))
				{
					if (this._tblUserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserGroupID = value;
					this.SendPropertyChanged("UserGroupID");
					this.OnUserGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_ViewRight", DbType="Bit NOT NULL")]
		public bool ViewRight
		{
			get
			{
				return this._ViewRight;
			}
			set
			{
				if ((this._ViewRight != value))
				{
					this.OnViewRightChanging(value);
					this.SendPropertyChanging();
					this._ViewRight = value;
					this.SendPropertyChanged("ViewRight");
					this.OnViewRightChanged();
				}
			}
		}
		
		[Column(Storage="_InsertRight", DbType="Bit NOT NULL")]
		public bool InsertRight
		{
			get
			{
				return this._InsertRight;
			}
			set
			{
				if ((this._InsertRight != value))
				{
					this.OnInsertRightChanging(value);
					this.SendPropertyChanging();
					this._InsertRight = value;
					this.SendPropertyChanged("InsertRight");
					this.OnInsertRightChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateRight", DbType="Bit NOT NULL")]
		public bool UpdateRight
		{
			get
			{
				return this._UpdateRight;
			}
			set
			{
				if ((this._UpdateRight != value))
				{
					this.OnUpdateRightChanging(value);
					this.SendPropertyChanging();
					this._UpdateRight = value;
					this.SendPropertyChanged("UpdateRight");
					this.OnUpdateRightChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteRight", DbType="Bit NOT NULL")]
		public bool DeleteRight
		{
			get
			{
				return this._DeleteRight;
			}
			set
			{
				if ((this._DeleteRight != value))
				{
					this.OnDeleteRightChanging(value);
					this.SendPropertyChanging();
					this._DeleteRight = value;
					this.SendPropertyChanged("DeleteRight");
					this.OnDeleteRightChanged();
				}
			}
		}
		
		[Column(Storage="_ApproveRight", DbType="Bit NOT NULL")]
		public bool ApproveRight
		{
			get
			{
				return this._ApproveRight;
			}
			set
			{
				if ((this._ApproveRight != value))
				{
					this.OnApproveRightChanging(value);
					this.SendPropertyChanging();
					this._ApproveRight = value;
					this.SendPropertyChanged("ApproveRight");
					this.OnApproveRightChanged();
				}
			}
		}
		
		[Association(Name="tblPage_tblPermission", Storage="_tblPage", ThisKey="PageID", OtherKey="PageID", IsForeignKey=true)]
		public tblPage tblPage
		{
			get
			{
				return this._tblPage.Entity;
			}
			set
			{
				tblPage previousValue = this._tblPage.Entity;
				if (((previousValue != value) 
							|| (this._tblPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPage.Entity = null;
						previousValue.tblPermissions.Remove(this);
					}
					this._tblPage.Entity = value;
					if ((value != null))
					{
						value.tblPermissions.Add(this);
						this._PageID = value.PageID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("tblPage");
				}
			}
		}
		
		[Association(Name="tblUserGroup_tblPermission", Storage="_tblUserGroup", ThisKey="UserGroupID", OtherKey="UserGroupID", IsForeignKey=true)]
		public tblUserGroup tblUserGroup
		{
			get
			{
				return this._tblUserGroup.Entity;
			}
			set
			{
				tblUserGroup previousValue = this._tblUserGroup.Entity;
				if (((previousValue != value) 
							|| (this._tblUserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUserGroup.Entity = null;
						previousValue.tblPermissions.Remove(this);
					}
					this._tblUserGroup.Entity = value;
					if ((value != null))
					{
						value.tblPermissions.Add(this);
						this._UserGroupID = value.UserGroupID;
					}
					else
					{
						this._UserGroupID = default(int);
					}
					this.SendPropertyChanged("tblUserGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblPhanDoan")]
	public partial class tblPhanDoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhanDoanID;
		
		private string _MaPhanDoan;
		
		private string _MoTaChung;
		
		private string _NoiDung;
		
		private System.Nullable<int> _TaiLieuID;
		
		private string _TenPhanDoan;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhanDoanIDChanging(int value);
    partial void OnPhanDoanIDChanged();
    partial void OnMaPhanDoanChanging(string value);
    partial void OnMaPhanDoanChanged();
    partial void OnMoTaChungChanging(string value);
    partial void OnMoTaChungChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnTaiLieuIDChanging(System.Nullable<int> value);
    partial void OnTaiLieuIDChanged();
    partial void OnTenPhanDoanChanging(string value);
    partial void OnTenPhanDoanChanged();
    #endregion
		
		public tblPhanDoan()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			OnCreated();
		}
		
		[Column(Storage="_PhanDoanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhanDoanID
		{
			get
			{
				return this._PhanDoanID;
			}
			set
			{
				if ((this._PhanDoanID != value))
				{
					this.OnPhanDoanIDChanging(value);
					this.SendPropertyChanging();
					this._PhanDoanID = value;
					this.SendPropertyChanged("PhanDoanID");
					this.OnPhanDoanIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaPhanDoan", DbType="VarChar(50)")]
		public string MaPhanDoan
		{
			get
			{
				return this._MaPhanDoan;
			}
			set
			{
				if ((this._MaPhanDoan != value))
				{
					this.OnMaPhanDoanChanging(value);
					this.SendPropertyChanging();
					this._MaPhanDoan = value;
					this.SendPropertyChanged("MaPhanDoan");
					this.OnMaPhanDoanChanged();
				}
			}
		}
		
		[Column(Storage="_MoTaChung", DbType="NVarChar(200)")]
		public string MoTaChung
		{
			get
			{
				return this._MoTaChung;
			}
			set
			{
				if ((this._MoTaChung != value))
				{
					this.OnMoTaChungChanging(value);
					this.SendPropertyChanging();
					this._MoTaChung = value;
					this.SendPropertyChanged("MoTaChung");
					this.OnMoTaChungChanged();
				}
			}
		}
		
		[Column(Storage="_NoiDung", DbType="NVarChar(200)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuID", DbType="Int")]
		public System.Nullable<int> TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenPhanDoan", DbType="NVarChar(100)")]
		public string TenPhanDoan
		{
			get
			{
				return this._TenPhanDoan;
			}
			set
			{
				if ((this._TenPhanDoan != value))
				{
					this.OnTenPhanDoanChanging(value);
					this.SendPropertyChanging();
					this._TenPhanDoan = value;
					this.SendPropertyChanged("TenPhanDoan");
					this.OnTenPhanDoanChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblPhanDoan", Storage="_tblTaiLieu", ThisKey="TaiLieuID", OtherKey="TaiLieuID", IsForeignKey=true)]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblPhanDoans.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblPhanDoans.Add(this);
						this._TaiLieuID = value.TaiLieuID;
					}
					else
					{
						this._TaiLieuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblTacGia")]
	public partial class tblTacGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TacGiaID;
		
		private System.Nullable<int> _TaiLieuID;
		
		private string _TenTacGia;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTacGiaIDChanging(int value);
    partial void OnTacGiaIDChanged();
    partial void OnTaiLieuIDChanging(System.Nullable<int> value);
    partial void OnTaiLieuIDChanged();
    partial void OnTenTacGiaChanging(string value);
    partial void OnTenTacGiaChanged();
    #endregion
		
		public tblTacGia()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			OnCreated();
		}
		
		[Column(Storage="_TacGiaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TacGiaID
		{
			get
			{
				return this._TacGiaID;
			}
			set
			{
				if ((this._TacGiaID != value))
				{
					this.OnTacGiaIDChanging(value);
					this.SendPropertyChanging();
					this._TacGiaID = value;
					this.SendPropertyChanged("TacGiaID");
					this.OnTacGiaIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuID", DbType="Int")]
		public System.Nullable<int> TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenTacGia", DbType="NVarChar(50)")]
		public string TenTacGia
		{
			get
			{
				return this._TenTacGia;
			}
			set
			{
				if ((this._TenTacGia != value))
				{
					this.OnTenTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TenTacGia = value;
					this.SendPropertyChanged("TenTacGia");
					this.OnTenTacGiaChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblTacGia", Storage="_tblTaiLieu", ThisKey="TaiLieuID", OtherKey="TaiLieuID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblTacGias.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblTacGias.Add(this);
						this._TaiLieuID = value.TaiLieuID;
					}
					else
					{
						this._TaiLieuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblTaiLieu")]
	public partial class tblTaiLieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaiLieuID;
		
		private string _MaTaiLieu;
		
		private string _TenTaiLieu;
		
		private System.Nullable<System.DateTime> _VongDoi_StartDate;
		
		private System.Nullable<System.DateTime> _VongDoi_EndDate;
		
		private string _TomTatNoiDung;
		
		private System.Nullable<int> _SoLanXem;
		
		private int _NhomTaiLieuID;
		
		private System.Nullable<byte> _TrangThaiTaiLieu;
		
		private string _TacGia;
		
		private string _NgonNgu;
		
		private string _TuKhoa;
		
		private EntitySet<tblDinhKem> _tblDinhKems;
		
		private EntitySet<tblDocument> _tblDocuments;
		
		private EntitySet<tblGui> _tblGuis;
		
		private EntitySet<tblNgonNguTL> _tblNgonNguTLs;
		
		private EntitySet<tblPhanDoan> _tblPhanDoans;
		
		private EntitySet<tblTacGia> _tblTacGias;
		
		private EntitySet<tblThaoTac> _tblThaoTacs;
		
		private EntitySet<tblTrangThai> _tblTrangThais;
		
		private EntitySet<tblTuKhoa> _tblTuKhoas;
		
		private EntityRef<tblNhomTaiLieu> _tblNhomTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiLieuIDChanging(int value);
    partial void OnTaiLieuIDChanged();
    partial void OnMaTaiLieuChanging(string value);
    partial void OnMaTaiLieuChanged();
    partial void OnTenTaiLieuChanging(string value);
    partial void OnTenTaiLieuChanged();
    partial void OnVongDoi_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVongDoi_StartDateChanged();
    partial void OnVongDoi_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVongDoi_EndDateChanged();
    partial void OnTomTatNoiDungChanging(string value);
    partial void OnTomTatNoiDungChanged();
    partial void OnSoLanXemChanging(System.Nullable<int> value);
    partial void OnSoLanXemChanged();
    partial void OnNhomTaiLieuIDChanging(int value);
    partial void OnNhomTaiLieuIDChanged();
    partial void OnTrangThaiTaiLieuChanging(System.Nullable<byte> value);
    partial void OnTrangThaiTaiLieuChanged();
    partial void OnTacGiaChanging(string value);
    partial void OnTacGiaChanged();
    partial void OnNgonNguChanging(string value);
    partial void OnNgonNguChanged();
    partial void OnTuKhoaChanging(string value);
    partial void OnTuKhoaChanged();
    #endregion
		
		public tblTaiLieu()
		{
			this._tblDinhKems = new EntitySet<tblDinhKem>(new Action<tblDinhKem>(this.attach_tblDinhKems), new Action<tblDinhKem>(this.detach_tblDinhKems));
			this._tblDocuments = new EntitySet<tblDocument>(new Action<tblDocument>(this.attach_tblDocuments), new Action<tblDocument>(this.detach_tblDocuments));
			this._tblGuis = new EntitySet<tblGui>(new Action<tblGui>(this.attach_tblGuis), new Action<tblGui>(this.detach_tblGuis));
			this._tblNgonNguTLs = new EntitySet<tblNgonNguTL>(new Action<tblNgonNguTL>(this.attach_tblNgonNguTLs), new Action<tblNgonNguTL>(this.detach_tblNgonNguTLs));
			this._tblPhanDoans = new EntitySet<tblPhanDoan>(new Action<tblPhanDoan>(this.attach_tblPhanDoans), new Action<tblPhanDoan>(this.detach_tblPhanDoans));
			this._tblTacGias = new EntitySet<tblTacGia>(new Action<tblTacGia>(this.attach_tblTacGias), new Action<tblTacGia>(this.detach_tblTacGias));
			this._tblThaoTacs = new EntitySet<tblThaoTac>(new Action<tblThaoTac>(this.attach_tblThaoTacs), new Action<tblThaoTac>(this.detach_tblThaoTacs));
			this._tblTrangThais = new EntitySet<tblTrangThai>(new Action<tblTrangThai>(this.attach_tblTrangThais), new Action<tblTrangThai>(this.detach_tblTrangThais));
			this._tblTuKhoas = new EntitySet<tblTuKhoa>(new Action<tblTuKhoa>(this.attach_tblTuKhoas), new Action<tblTuKhoa>(this.detach_tblTuKhoas));
			this._tblNhomTaiLieu = default(EntityRef<tblNhomTaiLieu>);
			OnCreated();
		}
		
		[Column(Storage="_TaiLieuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiLieu", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaTaiLieu
		{
			get
			{
				return this._MaTaiLieu;
			}
			set
			{
				if ((this._MaTaiLieu != value))
				{
					this.OnMaTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._MaTaiLieu = value;
					this.SendPropertyChanged("MaTaiLieu");
					this.OnMaTaiLieuChanged();
				}
			}
		}
		
		[Column(Storage="_TenTaiLieu", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTaiLieu
		{
			get
			{
				return this._TenTaiLieu;
			}
			set
			{
				if ((this._TenTaiLieu != value))
				{
					this.OnTenTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._TenTaiLieu = value;
					this.SendPropertyChanged("TenTaiLieu");
					this.OnTenTaiLieuChanged();
				}
			}
		}
		
		[Column(Storage="_VongDoi_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VongDoi_StartDate
		{
			get
			{
				return this._VongDoi_StartDate;
			}
			set
			{
				if ((this._VongDoi_StartDate != value))
				{
					this.OnVongDoi_StartDateChanging(value);
					this.SendPropertyChanging();
					this._VongDoi_StartDate = value;
					this.SendPropertyChanged("VongDoi_StartDate");
					this.OnVongDoi_StartDateChanged();
				}
			}
		}
		
		[Column(Storage="_VongDoi_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VongDoi_EndDate
		{
			get
			{
				return this._VongDoi_EndDate;
			}
			set
			{
				if ((this._VongDoi_EndDate != value))
				{
					this.OnVongDoi_EndDateChanging(value);
					this.SendPropertyChanging();
					this._VongDoi_EndDate = value;
					this.SendPropertyChanged("VongDoi_EndDate");
					this.OnVongDoi_EndDateChanged();
				}
			}
		}
		
		[Column(Storage="_TomTatNoiDung", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TomTatNoiDung
		{
			get
			{
				return this._TomTatNoiDung;
			}
			set
			{
				if ((this._TomTatNoiDung != value))
				{
					this.OnTomTatNoiDungChanging(value);
					this.SendPropertyChanging();
					this._TomTatNoiDung = value;
					this.SendPropertyChanged("TomTatNoiDung");
					this.OnTomTatNoiDungChanged();
				}
			}
		}
		
		[Column(Storage="_SoLanXem", DbType="Int")]
		public System.Nullable<int> SoLanXem
		{
			get
			{
				return this._SoLanXem;
			}
			set
			{
				if ((this._SoLanXem != value))
				{
					this.OnSoLanXemChanging(value);
					this.SendPropertyChanging();
					this._SoLanXem = value;
					this.SendPropertyChanged("SoLanXem");
					this.OnSoLanXemChanged();
				}
			}
		}
		
		[Column(Storage="_NhomTaiLieuID", DbType="Int NOT NULL")]
		public int NhomTaiLieuID
		{
			get
			{
				return this._NhomTaiLieuID;
			}
			set
			{
				if ((this._NhomTaiLieuID != value))
				{
					if (this._tblNhomTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhomTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._NhomTaiLieuID = value;
					this.SendPropertyChanged("NhomTaiLieuID");
					this.OnNhomTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_TrangThaiTaiLieu", DbType="TinyInt")]
		public System.Nullable<byte> TrangThaiTaiLieu
		{
			get
			{
				return this._TrangThaiTaiLieu;
			}
			set
			{
				if ((this._TrangThaiTaiLieu != value))
				{
					this.OnTrangThaiTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiTaiLieu = value;
					this.SendPropertyChanged("TrangThaiTaiLieu");
					this.OnTrangThaiTaiLieuChanged();
				}
			}
		}
		
		[Column(Storage="_TacGia", DbType="NVarChar(200)")]
		public string TacGia
		{
			get
			{
				return this._TacGia;
			}
			set
			{
				if ((this._TacGia != value))
				{
					this.OnTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TacGia = value;
					this.SendPropertyChanged("TacGia");
					this.OnTacGiaChanged();
				}
			}
		}
		
		[Column(Storage="_NgonNgu", DbType="NVarChar(200)")]
		public string NgonNgu
		{
			get
			{
				return this._NgonNgu;
			}
			set
			{
				if ((this._NgonNgu != value))
				{
					this.OnNgonNguChanging(value);
					this.SendPropertyChanging();
					this._NgonNgu = value;
					this.SendPropertyChanged("NgonNgu");
					this.OnNgonNguChanged();
				}
			}
		}
		
		[Column(Storage="_TuKhoa", DbType="NVarChar(200)")]
		public string TuKhoa
		{
			get
			{
				return this._TuKhoa;
			}
			set
			{
				if ((this._TuKhoa != value))
				{
					this.OnTuKhoaChanging(value);
					this.SendPropertyChanging();
					this._TuKhoa = value;
					this.SendPropertyChanged("TuKhoa");
					this.OnTuKhoaChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblDinhKem", Storage="_tblDinhKems", ThisKey="TaiLieuID", OtherKey="TaiLieuID")]
		public EntitySet<tblDinhKem> tblDinhKems
		{
			get
			{
				return this._tblDinhKems;
			}
			set
			{
				this._tblDinhKems.Assign(value);
			}
		}
		
		[Association(Name="tblTaiLieu_tblDocument", Storage="_tblDocuments", ThisKey="TaiLieuID", OtherKey="ReferrenceID")]
		public EntitySet<tblDocument> tblDocuments
		{
			get
			{
				return this._tblDocuments;
			}
			set
			{
				this._tblDocuments.Assign(value);
			}
		}
		
		[Association(Name="tblTaiLieu_tblGui", Storage="_tblGuis", ThisKey="TaiLieuID", OtherKey="TaiLieuID")]
		public EntitySet<tblGui> tblGuis
		{
			get
			{
				return this._tblGuis;
			}
			set
			{
				this._tblGuis.Assign(value);
			}
		}
		
		[Association(Name="tblTaiLieu_tblNgonNguTL", Storage="_tblNgonNguTLs", ThisKey="TaiLieuID", OtherKey="TaiLieuID")]
		public EntitySet<tblNgonNguTL> tblNgonNguTLs
		{
			get
			{
				return this._tblNgonNguTLs;
			}
			set
			{
				this._tblNgonNguTLs.Assign(value);
			}
		}
		
		[Association(Name="tblTaiLieu_tblPhanDoan", Storage="_tblPhanDoans", ThisKey="TaiLieuID", OtherKey="TaiLieuID")]
		public EntitySet<tblPhanDoan> tblPhanDoans
		{
			get
			{
				return this._tblPhanDoans;
			}
			set
			{
				this._tblPhanDoans.Assign(value);
			}
		}
		
		[Association(Name="tblTaiLieu_tblTacGia", Storage="_tblTacGias", ThisKey="TaiLieuID", OtherKey="TaiLieuID")]
		public EntitySet<tblTacGia> tblTacGias
		{
			get
			{
				return this._tblTacGias;
			}
			set
			{
				this._tblTacGias.Assign(value);
			}
		}
		
		[Association(Name="tblTaiLieu_tblThaoTac", Storage="_tblThaoTacs", ThisKey="TaiLieuID", OtherKey="TaiLieuID")]
		public EntitySet<tblThaoTac> tblThaoTacs
		{
			get
			{
				return this._tblThaoTacs;
			}
			set
			{
				this._tblThaoTacs.Assign(value);
			}
		}
		
		[Association(Name="tblTaiLieu_tblTrangThai", Storage="_tblTrangThais", ThisKey="TaiLieuID", OtherKey="TaiLieuID")]
		public EntitySet<tblTrangThai> tblTrangThais
		{
			get
			{
				return this._tblTrangThais;
			}
			set
			{
				this._tblTrangThais.Assign(value);
			}
		}
		
		[Association(Name="tblTaiLieu_tblTuKhoa", Storage="_tblTuKhoas", ThisKey="TaiLieuID", OtherKey="TaiLieuID")]
		public EntitySet<tblTuKhoa> tblTuKhoas
		{
			get
			{
				return this._tblTuKhoas;
			}
			set
			{
				this._tblTuKhoas.Assign(value);
			}
		}
		
		[Association(Name="tblNhomTaiLieu_tblTaiLieu", Storage="_tblNhomTaiLieu", ThisKey="NhomTaiLieuID", OtherKey="NhomTaiLieuID", IsForeignKey=true)]
		public tblNhomTaiLieu tblNhomTaiLieu
		{
			get
			{
				return this._tblNhomTaiLieu.Entity;
			}
			set
			{
				tblNhomTaiLieu previousValue = this._tblNhomTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblNhomTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblNhomTaiLieu.Entity = null;
						previousValue.tblTaiLieus.Remove(this);
					}
					this._tblNhomTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblTaiLieus.Add(this);
						this._NhomTaiLieuID = value.NhomTaiLieuID;
					}
					else
					{
						this._NhomTaiLieuID = default(int);
					}
					this.SendPropertyChanged("tblNhomTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblDinhKems(tblDinhKem entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblDinhKems(tblDinhKem entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
		
		private void attach_tblDocuments(tblDocument entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblDocuments(tblDocument entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
		
		private void attach_tblGuis(tblGui entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblGuis(tblGui entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
		
		private void attach_tblNgonNguTLs(tblNgonNguTL entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblNgonNguTLs(tblNgonNguTL entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
		
		private void attach_tblPhanDoans(tblPhanDoan entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblPhanDoans(tblPhanDoan entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
		
		private void attach_tblTacGias(tblTacGia entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblTacGias(tblTacGia entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
		
		private void attach_tblThaoTacs(tblThaoTac entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblThaoTacs(tblThaoTac entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
		
		private void attach_tblTrangThais(tblTrangThai entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblTrangThais(tblTrangThai entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
		
		private void attach_tblTuKhoas(tblTuKhoa entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = this;
		}
		
		private void detach_tblTuKhoas(tblTuKhoa entity)
		{
			this.SendPropertyChanging();
			entity.tblTaiLieu = null;
		}
	}
	
	[Table(Name="dbo.tblThaoTac")]
	public partial class tblThaoTac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThaoTacID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _TaiLieuID;
		
		private string _HanhVi;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThaoTacIDChanging(int value);
    partial void OnThaoTacIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTaiLieuIDChanging(System.Nullable<int> value);
    partial void OnTaiLieuIDChanged();
    partial void OnHanhViChanging(string value);
    partial void OnHanhViChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    #endregion
		
		public tblThaoTac()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[Column(Storage="_ThaoTacID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThaoTacID
		{
			get
			{
				return this._ThaoTacID;
			}
			set
			{
				if ((this._ThaoTacID != value))
				{
					this.OnThaoTacIDChanging(value);
					this.SendPropertyChanging();
					this._ThaoTacID = value;
					this.SendPropertyChanged("ThaoTacID");
					this.OnThaoTacIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuID", DbType="Int")]
		public System.Nullable<int> TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_HanhVi", DbType="NVarChar(100)")]
		public string HanhVi
		{
			get
			{
				return this._HanhVi;
			}
			set
			{
				if ((this._HanhVi != value))
				{
					this.OnHanhViChanging(value);
					this.SendPropertyChanging();
					this._HanhVi = value;
					this.SendPropertyChanged("HanhVi");
					this.OnHanhViChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblThaoTac", Storage="_tblTaiLieu", ThisKey="TaiLieuID", OtherKey="TaiLieuID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblThaoTacs.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblThaoTacs.Add(this);
						this._TaiLieuID = value.TaiLieuID;
					}
					else
					{
						this._TaiLieuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		[Association(Name="tblUser_tblThaoTac", Storage="_tblUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblThaoTacs.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblThaoTacs.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblTrangThai")]
	public partial class tblTrangThai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrangThaiID;
		
		private string _TenTrangThai;
		
		private System.Nullable<System.DateTime> _ThoiGianBatDau;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private string _MoTa;
		
		private System.Nullable<int> _TaiLieuID;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrangThaiIDChanging(int value);
    partial void OnTrangThaiIDChanged();
    partial void OnTenTrangThaiChanging(string value);
    partial void OnTenTrangThaiChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKetThucChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTaiLieuIDChanging(System.Nullable<int> value);
    partial void OnTaiLieuIDChanged();
    #endregion
		
		public tblTrangThai()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			OnCreated();
		}
		
		[Column(Storage="_TrangThaiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrangThaiID
		{
			get
			{
				return this._TrangThaiID;
			}
			set
			{
				if ((this._TrangThaiID != value))
				{
					this.OnTrangThaiIDChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiID = value;
					this.SendPropertyChanged("TrangThaiID");
					this.OnTrangThaiIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenTrangThai", DbType="NVarChar(50)")]
		public string TenTrangThai
		{
			get
			{
				return this._TenTrangThai;
			}
			set
			{
				if ((this._TenTrangThai != value))
				{
					this.OnTenTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TenTrangThai = value;
					this.SendPropertyChanged("TenTrangThai");
					this.OnTenTrangThaiChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGianBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGianKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[Column(Storage="_MoTa", DbType="NVarChar(50)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuID", DbType="Int")]
		public System.Nullable<int> TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblTrangThai", Storage="_tblTaiLieu", ThisKey="TaiLieuID", OtherKey="TaiLieuID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblTrangThais.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblTrangThais.Add(this);
						this._TaiLieuID = value.TaiLieuID;
					}
					else
					{
						this._TaiLieuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblTuKhoa")]
	public partial class tblTuKhoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TuKhoaID;
		
		private System.Nullable<int> _TaiLieuID;
		
		private string _TuKhoa;
		
		private EntityRef<tblTaiLieu> _tblTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTuKhoaIDChanging(int value);
    partial void OnTuKhoaIDChanged();
    partial void OnTaiLieuIDChanging(System.Nullable<int> value);
    partial void OnTaiLieuIDChanged();
    partial void OnTuKhoaChanging(string value);
    partial void OnTuKhoaChanged();
    #endregion
		
		public tblTuKhoa()
		{
			this._tblTaiLieu = default(EntityRef<tblTaiLieu>);
			OnCreated();
		}
		
		[Column(Storage="_TuKhoaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TuKhoaID
		{
			get
			{
				return this._TuKhoaID;
			}
			set
			{
				if ((this._TuKhoaID != value))
				{
					this.OnTuKhoaIDChanging(value);
					this.SendPropertyChanging();
					this._TuKhoaID = value;
					this.SendPropertyChanged("TuKhoaID");
					this.OnTuKhoaIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaiLieuID", DbType="Int")]
		public System.Nullable<int> TaiLieuID
		{
			get
			{
				return this._TaiLieuID;
			}
			set
			{
				if ((this._TaiLieuID != value))
				{
					if (this._tblTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiLieuIDChanging(value);
					this.SendPropertyChanging();
					this._TaiLieuID = value;
					this.SendPropertyChanged("TaiLieuID");
					this.OnTaiLieuIDChanged();
				}
			}
		}
		
		[Column(Storage="_TuKhoa", DbType="NVarChar(100)")]
		public string TuKhoa
		{
			get
			{
				return this._TuKhoa;
			}
			set
			{
				if ((this._TuKhoa != value))
				{
					this.OnTuKhoaChanging(value);
					this.SendPropertyChanging();
					this._TuKhoa = value;
					this.SendPropertyChanged("TuKhoa");
					this.OnTuKhoaChanged();
				}
			}
		}
		
		[Association(Name="tblTaiLieu_tblTuKhoa", Storage="_tblTaiLieu", ThisKey="TaiLieuID", OtherKey="TaiLieuID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblTaiLieu tblTaiLieu
		{
			get
			{
				return this._tblTaiLieu.Entity;
			}
			set
			{
				tblTaiLieu previousValue = this._tblTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._tblTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTaiLieu.Entity = null;
						previousValue.tblTuKhoas.Remove(this);
					}
					this._tblTaiLieu.Entity = value;
					if ((value != null))
					{
						value.tblTuKhoas.Add(this);
						this._TaiLieuID = value.TaiLieuID;
					}
					else
					{
						this._TaiLieuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _FullName;
		
		private int _UserGroupID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private System.DateTime _LastLoginDate;
		
		private byte _UserStatus;
		
		private int _FailedLogin;
		
		private string _UserNo;
		
		private string _Address;
		
		private System.Nullable<bool> _IsEmployee;
		
		private EntitySet<tblGui> _tblGuis;
		
		private EntitySet<tblThaoTac> _tblThaoTacs;
		
		private EntityRef<tblUserGroup> _tblUserGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnUserGroupIDChanging(int value);
    partial void OnUserGroupIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnUserStatusChanging(byte value);
    partial void OnUserStatusChanged();
    partial void OnFailedLoginChanging(int value);
    partial void OnFailedLoginChanged();
    partial void OnUserNoChanging(string value);
    partial void OnUserNoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsEmployeeChanging(System.Nullable<bool> value);
    partial void OnIsEmployeeChanged();
    #endregion
		
		public tblUser()
		{
			this._tblGuis = new EntitySet<tblGui>(new Action<tblGui>(this.attach_tblGuis), new Action<tblGui>(this.detach_tblGuis));
			this._tblThaoTacs = new EntitySet<tblThaoTac>(new Action<tblThaoTac>(this.attach_tblThaoTacs), new Action<tblThaoTac>(this.detach_tblThaoTacs));
			this._tblUserGroup = default(EntityRef<tblUserGroup>);
			OnCreated();
		}
		
		[Column(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserGroupID", DbType="Int NOT NULL")]
		public int UserGroupID
		{
			get
			{
				return this._UserGroupID;
			}
			set
			{
				if ((this._UserGroupID != value))
				{
					if (this._tblUserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserGroupID = value;
					this.SendPropertyChanged("UserGroupID");
					this.OnUserGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[Column(Storage="_UserStatus", DbType="TinyInt NOT NULL")]
		public byte UserStatus
		{
			get
			{
				return this._UserStatus;
			}
			set
			{
				if ((this._UserStatus != value))
				{
					this.OnUserStatusChanging(value);
					this.SendPropertyChanging();
					this._UserStatus = value;
					this.SendPropertyChanged("UserStatus");
					this.OnUserStatusChanged();
				}
			}
		}
		
		[Column(Storage="_FailedLogin", DbType="Int NOT NULL")]
		public int FailedLogin
		{
			get
			{
				return this._FailedLogin;
			}
			set
			{
				if ((this._FailedLogin != value))
				{
					this.OnFailedLoginChanging(value);
					this.SendPropertyChanging();
					this._FailedLogin = value;
					this.SendPropertyChanged("FailedLogin");
					this.OnFailedLoginChanged();
				}
			}
		}
		
		[Column(Storage="_UserNo", DbType="VarChar(50)")]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this.OnUserNoChanging(value);
					this.SendPropertyChanging();
					this._UserNo = value;
					this.SendPropertyChanged("UserNo");
					this.OnUserNoChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_IsEmployee", DbType="Bit")]
		public System.Nullable<bool> IsEmployee
		{
			get
			{
				return this._IsEmployee;
			}
			set
			{
				if ((this._IsEmployee != value))
				{
					this.OnIsEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IsEmployee = value;
					this.SendPropertyChanged("IsEmployee");
					this.OnIsEmployeeChanged();
				}
			}
		}
		
		[Association(Name="tblUser_tblGui", Storage="_tblGuis", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<tblGui> tblGuis
		{
			get
			{
				return this._tblGuis;
			}
			set
			{
				this._tblGuis.Assign(value);
			}
		}
		
		[Association(Name="tblUser_tblThaoTac", Storage="_tblThaoTacs", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<tblThaoTac> tblThaoTacs
		{
			get
			{
				return this._tblThaoTacs;
			}
			set
			{
				this._tblThaoTacs.Assign(value);
			}
		}
		
		[Association(Name="tblUserGroup_tblUser", Storage="_tblUserGroup", ThisKey="UserGroupID", OtherKey="UserGroupID", IsForeignKey=true)]
		public tblUserGroup tblUserGroup
		{
			get
			{
				return this._tblUserGroup.Entity;
			}
			set
			{
				tblUserGroup previousValue = this._tblUserGroup.Entity;
				if (((previousValue != value) 
							|| (this._tblUserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUserGroup.Entity = null;
						previousValue.tblUsers.Remove(this);
					}
					this._tblUserGroup.Entity = value;
					if ((value != null))
					{
						value.tblUsers.Add(this);
						this._UserGroupID = value.UserGroupID;
					}
					else
					{
						this._UserGroupID = default(int);
					}
					this.SendPropertyChanged("tblUserGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblGuis(tblGui entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblGuis(tblGui entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblThaoTacs(tblThaoTac entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblThaoTacs(tblThaoTac entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
	}
}
#pragma warning restore 1591
