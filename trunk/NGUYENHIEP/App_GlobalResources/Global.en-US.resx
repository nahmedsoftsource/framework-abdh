<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>Add Category</value>
  </data>
  <data name="AddConstruction" xml:space="preserve">
    <value>Add Construction</value>
  </data>
  <data name="AddNews" xml:space="preserve">
    <value>Add News</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="AddRecruitment" xml:space="preserve">
    <value>Add Recruitment</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address: 183 Hoa Bang  - Yen Hoa - Cau Giay - Ha Noi - Vietnam</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Category Name</value>
  </data>
  <data name="ConstructionImages" xml:space="preserve">
    <value>Construction Images</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="CopyRight" xml:space="preserve">
    <value>Copy Right</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditCategory" xml:space="preserve">
    <value>Edit category</value>
  </data>
  <data name="EditNew" xml:space="preserve">
    <value>Edit New</value>
  </data>
  <data name="EditProduct" xml:space="preserve">
    <value>Edit Product</value>
  </data>
  <data name="ENDescription" xml:space="preserve">
    <value>English Description</value>
  </data>
  <data name="ENName" xml:space="preserve">
    <value>English Name</value>
  </data>
  <data name="EnterContactInfo" xml:space="preserve">
    <value>Enter Contact Information</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="LinkedWebsites" xml:space="preserve">
    <value>Linked Websites</value>
  </data>
  <data name="MessageBox" xml:space="preserve">
    <value>Message Box</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="NewsEvent" xml:space="preserve">
    <value>News - Event</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NoSubject" xml:space="preserve">
    <value>No Subject</value>
  </data>
  <data name="NoTitle" xml:space="preserve">
    <value>No Title</value>
  </data>
  <data name="OnlineSupport" xml:space="preserve">
    <value>Online Support</value>
  </data>
  <data name="OurProducts" xml:space="preserve">
    <value>Our Products</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Promoted" xml:space="preserve">
    <value>Promoted</value>
  </data>
  <data name="PromotionProgram" xml:space="preserve">
    <value>Promotion Program</value>
  </data>
  <data name="Recruitment" xml:space="preserve">
    <value>Recruitment</value>
  </data>
  <data name="ShortDescription" xml:space="preserve">
    <value>Short Description</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="TypeName" xml:space="preserve">
    <value>Type Name</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="VNDescription" xml:space="preserve">
    <value>Vietnamese Description</value>
  </data>
  <data name="VNName" xml:space="preserve">
    <value>Vietnamese Name</value>
  </data>
  <data name="Warranty" xml:space="preserve">
    <value>Wanrranty</value>
  </data>
  <data name="AccountingDept" xml:space="preserve">
    <value>Accouting Department</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginInfo" xml:space="preserve">
    <value>Login Information</value>
  </data>
  <data name="ManagementBoard" xml:space="preserve">
    <value>Management Board</value>
  </data>
  <data name="MarketingDept" xml:space="preserve">
    <value>Marketing Department</value>
  </data>
  <data name="SaleDept" xml:space="preserve">
    <value>Sale Department</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="TechnicalDept" xml:space="preserve">
    <value>Technical Department</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="YourName" xml:space="preserve">
    <value>Your Name</value>
  </data>
  <data name="AccountInfor" xml:space="preserve">
    <value>Account Information</value>
  </data>
  <data name="AvailableInStore" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="ChangePasswordSuccess" xml:space="preserve">
    <value>Your password has been changed successfully.</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create a New Account</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="EmptyInStore" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>The e-mail address provided is invalid. Please check the value and try again.</value>
  </data>
  <data name="IsPromoted" xml:space="preserve">
    <value>Promoted</value>
  </data>
  <data name="Login1" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginInfo1" xml:space="preserve">
    <value>Login Information</value>
  </data>
  <data name="Logon" xml:space="preserve">
    <value>Logon</value>
  </data>
  <data name="LogonBy" xml:space="preserve">
    <value>Login by:</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NotAvailable" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="NotPromoted" xml:space="preserve">
    <value>Non promoted</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ProductDetails" xml:space="preserve">
    <value>Product Details</value>
  </data>
  <data name="ProductType" xml:space="preserve">
    <value>Product Type</value>
  </data>
  <data name="RememberPassword" xml:space="preserve">
    <value>Remember password</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Username:</value>
  </data>
  <data name="ValidateCreateAccount" xml:space="preserve">
    <value>Account creation was unsuccessful. Please correct the errors and try again.</value>
  </data>
  <data name="ValidateDuplicateEmail" xml:space="preserve">
    <value>A username for that e-mail address already exists. Please enter a different e-mail address.</value>
  </data>
  <data name="ValidateDuplicateUserName" xml:space="preserve">
    <value>Username already exists. Please enter a different username.</value>
  </data>
  <data name="ValidateEmail" xml:space="preserve">
    <value>You must specify a email.</value>
  </data>
  <data name="ValidatePassword" xml:space="preserve">
    <value>You must specify a password.</value>
  </data>
  <data name="ValidatePasswordConfirmPassword" xml:space="preserve">
    <value>The new password and confirmation password do not match</value>
  </data>
  <data name="WarningLogonUnssucessful" xml:space="preserve">
    <value>The username or password provided is incorrect.</value>
  </data>
  <data name="WarningPasswordLength" xml:space="preserve">
    <value>Passwords are required to be a minimum of 6 characters in length.</value>
  </data>
  <data name="AddNewsEvent" xml:space="preserve">
    <value>Add News/Event</value>
  </data>
  <data name="AddPromotion" xml:space="preserve">
    <value>Add Promotion</value>
  </data>
  <data name="EditNewsEvent" xml:space="preserve">
    <value>Edit News/Event</value>
  </data>
  <data name="EditPromotion" xml:space="preserve">
    <value>Edit Promotion</value>
  </data>
  <data name="EmageCurrent" xml:space="preserve">
    <value>Emage Current</value>
  </data>
</root>