#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NGUYENHIEP.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="NguyenHiep")]
	public partial class NguyenHiepDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblCategory(tblCategory instance);
    partial void UpdatetblCategory(tblCategory instance);
    partial void DeletetblCategory(tblCategory instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblInformation(tblInformation instance);
    partial void UpdatetblInformation(tblInformation instance);
    partial void DeletetblInformation(tblInformation instance);
    partial void InserttblNew(tblNew instance);
    partial void UpdatetblNew(tblNew instance);
    partial void DeletetblNew(tblNew instance);
    partial void InserttblProduct(tblProduct instance);
    partial void UpdatetblProduct(tblProduct instance);
    partial void DeletetblProduct(tblProduct instance);
    #endregion
		
		public NguyenHiepDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NguyenHiepConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NguyenHiepDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NguyenHiepDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NguyenHiepDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NguyenHiepDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblCategory> tblCategories
		{
			get
			{
				return this.GetTable<tblCategory>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblInformation> tblInformations
		{
			get
			{
				return this.GetTable<tblInformation>();
			}
		}
		
		public System.Data.Linq.Table<tblNew> tblNews
		{
			get
			{
				return this.GetTable<tblNew>();
			}
		}
		
		public System.Data.Linq.Table<tblProduct> tblProducts
		{
			get
			{
				return this.GetTable<tblProduct>();
			}
		}
	}
	
	[Table(Name="dbo.tblCategory")]
	public partial class tblCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CategoryNo;
		
		private string _CategoryNameVN;
		
		private string _CategoryNameEN;
		
		private string _DescriptionVN;
		
		private string _DescriptionEN;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<bool> _Deleted;
		
		private EntitySet<tblProduct> _tblProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCategoryNoChanging(string value);
    partial void OnCategoryNoChanged();
    partial void OnCategoryNameVNChanging(string value);
    partial void OnCategoryNameVNChanged();
    partial void OnCategoryNameENChanging(string value);
    partial void OnCategoryNameENChanged();
    partial void OnDescriptionVNChanging(string value);
    partial void OnDescriptionVNChanged();
    partial void OnDescriptionENChanging(string value);
    partial void OnDescriptionENChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public tblCategory()
		{
			this._tblProducts = new EntitySet<tblProduct>(new Action<tblProduct>(this.attach_tblProducts), new Action<tblProduct>(this.detach_tblProducts));
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryNo
		{
			get
			{
				return this._CategoryNo;
			}
			set
			{
				if ((this._CategoryNo != value))
				{
					this.OnCategoryNoChanging(value);
					this.SendPropertyChanging();
					this._CategoryNo = value;
					this.SendPropertyChanged("CategoryNo");
					this.OnCategoryNoChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryNameVN", DbType="NVarChar(200)")]
		public string CategoryNameVN
		{
			get
			{
				return this._CategoryNameVN;
			}
			set
			{
				if ((this._CategoryNameVN != value))
				{
					this.OnCategoryNameVNChanging(value);
					this.SendPropertyChanging();
					this._CategoryNameVN = value;
					this.SendPropertyChanged("CategoryNameVN");
					this.OnCategoryNameVNChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryNameEN", DbType="NVarChar(200)")]
		public string CategoryNameEN
		{
			get
			{
				return this._CategoryNameEN;
			}
			set
			{
				if ((this._CategoryNameEN != value))
				{
					this.OnCategoryNameENChanging(value);
					this.SendPropertyChanging();
					this._CategoryNameEN = value;
					this.SendPropertyChanged("CategoryNameEN");
					this.OnCategoryNameENChanged();
				}
			}
		}
		
		[Column(Storage="_DescriptionVN", DbType="NVarChar(500)")]
		public string DescriptionVN
		{
			get
			{
				return this._DescriptionVN;
			}
			set
			{
				if ((this._DescriptionVN != value))
				{
					this.OnDescriptionVNChanging(value);
					this.SendPropertyChanging();
					this._DescriptionVN = value;
					this.SendPropertyChanged("DescriptionVN");
					this.OnDescriptionVNChanged();
				}
			}
		}
		
		[Column(Storage="_DescriptionEN", DbType="NVarChar(500)")]
		public string DescriptionEN
		{
			get
			{
				return this._DescriptionEN;
			}
			set
			{
				if ((this._DescriptionEN != value))
				{
					this.OnDescriptionENChanging(value);
					this.SendPropertyChanging();
					this._DescriptionEN = value;
					this.SendPropertyChanged("DescriptionEN");
					this.OnDescriptionENChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="VarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[Association(Name="tblCategory_tblProduct", Storage="_tblProducts", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<tblProduct> tblProducts
		{
			get
			{
				return this._tblProducts;
			}
			set
			{
				this._tblProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCategory = this;
		}
		
		private void detach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCategory = null;
		}
	}
	
	[Table(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _UserNo;
		
		private System.Nullable<byte> _Status;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<bool> _Deleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserNoChanging(string value);
    partial void OnUserNoChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public tblUser()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserNo", DbType="VarChar(50)")]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this.OnUserNoChanging(value);
					this.SendPropertyChanging();
					this._UserNo = value;
					this.SendPropertyChanged("UserNo");
					this.OnUserNoChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="VarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblInformation")]
	public partial class tblInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CompanyNameVN;
		
		private string _CompanyNameEN;
		
		private System.Data.Linq.Binary _Logo;
		
		private string _IntroduceVN;
		
		private string _IntroduceEN;
		
		private string _ContactVN;
		
		private string _ContactEN;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<bool> _Deleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCompanyNameVNChanging(string value);
    partial void OnCompanyNameVNChanged();
    partial void OnCompanyNameENChanging(string value);
    partial void OnCompanyNameENChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    partial void OnIntroduceVNChanging(string value);
    partial void OnIntroduceVNChanged();
    partial void OnIntroduceENChanging(string value);
    partial void OnIntroduceENChanged();
    partial void OnContactVNChanging(string value);
    partial void OnContactVNChanged();
    partial void OnContactENChanging(string value);
    partial void OnContactENChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public tblInformation()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNameVN", DbType="NVarChar(200)")]
		public string CompanyNameVN
		{
			get
			{
				return this._CompanyNameVN;
			}
			set
			{
				if ((this._CompanyNameVN != value))
				{
					this.OnCompanyNameVNChanging(value);
					this.SendPropertyChanging();
					this._CompanyNameVN = value;
					this.SendPropertyChanged("CompanyNameVN");
					this.OnCompanyNameVNChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNameEN", DbType="VarChar(200)")]
		public string CompanyNameEN
		{
			get
			{
				return this._CompanyNameEN;
			}
			set
			{
				if ((this._CompanyNameEN != value))
				{
					this.OnCompanyNameENChanging(value);
					this.SendPropertyChanging();
					this._CompanyNameEN = value;
					this.SendPropertyChanged("CompanyNameEN");
					this.OnCompanyNameENChanged();
				}
			}
		}
		
		[Column(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[Column(Storage="_IntroduceVN", DbType="NVarChar(500)")]
		public string IntroduceVN
		{
			get
			{
				return this._IntroduceVN;
			}
			set
			{
				if ((this._IntroduceVN != value))
				{
					this.OnIntroduceVNChanging(value);
					this.SendPropertyChanging();
					this._IntroduceVN = value;
					this.SendPropertyChanged("IntroduceVN");
					this.OnIntroduceVNChanged();
				}
			}
		}
		
		[Column(Storage="_IntroduceEN", DbType="VarChar(500)")]
		public string IntroduceEN
		{
			get
			{
				return this._IntroduceEN;
			}
			set
			{
				if ((this._IntroduceEN != value))
				{
					this.OnIntroduceENChanging(value);
					this.SendPropertyChanging();
					this._IntroduceEN = value;
					this.SendPropertyChanged("IntroduceEN");
					this.OnIntroduceENChanged();
				}
			}
		}
		
		[Column(Storage="_ContactVN", DbType="NVarChar(500)")]
		public string ContactVN
		{
			get
			{
				return this._ContactVN;
			}
			set
			{
				if ((this._ContactVN != value))
				{
					this.OnContactVNChanging(value);
					this.SendPropertyChanging();
					this._ContactVN = value;
					this.SendPropertyChanged("ContactVN");
					this.OnContactVNChanged();
				}
			}
		}
		
		[Column(Storage="_ContactEN", DbType="VarChar(500)")]
		public string ContactEN
		{
			get
			{
				return this._ContactEN;
			}
			set
			{
				if ((this._ContactEN != value))
				{
					this.OnContactENChanging(value);
					this.SendPropertyChanging();
					this._ContactEN = value;
					this.SendPropertyChanged("ContactEN");
					this.OnContactENChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="VarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblNews")]
	public partial class tblNew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _TitleVN;
		
		private string _TitleEN;
		
		private string _SubjectVN;
		
		private string _SubjectEN;
		
		private string _ContentVN;
		
		private string _ContentEN;
		
		private System.Nullable<byte> _Type;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _PostedDate;
		
		private string _PostedBy;
		
		private string _EndedBy;
		
		private System.Nullable<System.DateTime> _EndedDate;
		
		private System.Nullable<bool> _Deleted;
		
		private string _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTitleVNChanging(string value);
    partial void OnTitleVNChanged();
    partial void OnTitleENChanging(string value);
    partial void OnTitleENChanged();
    partial void OnSubjectVNChanging(string value);
    partial void OnSubjectVNChanged();
    partial void OnSubjectENChanging(string value);
    partial void OnSubjectENChanged();
    partial void OnContentVNChanging(string value);
    partial void OnContentVNChanged();
    partial void OnContentENChanging(string value);
    partial void OnContentENChanged();
    partial void OnTypeChanging(System.Nullable<byte> value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnPostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPostedDateChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnEndedByChanging(string value);
    partial void OnEndedByChanged();
    partial void OnEndedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndedDateChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public tblNew()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_TitleVN", DbType="NVarChar(200)")]
		public string TitleVN
		{
			get
			{
				return this._TitleVN;
			}
			set
			{
				if ((this._TitleVN != value))
				{
					this.OnTitleVNChanging(value);
					this.SendPropertyChanging();
					this._TitleVN = value;
					this.SendPropertyChanged("TitleVN");
					this.OnTitleVNChanged();
				}
			}
		}
		
		[Column(Storage="_TitleEN", DbType="NVarChar(200)")]
		public string TitleEN
		{
			get
			{
				return this._TitleEN;
			}
			set
			{
				if ((this._TitleEN != value))
				{
					this.OnTitleENChanging(value);
					this.SendPropertyChanging();
					this._TitleEN = value;
					this.SendPropertyChanged("TitleEN");
					this.OnTitleENChanged();
				}
			}
		}
		
		[Column(Storage="_SubjectVN", DbType="NVarChar(500)")]
		public string SubjectVN
		{
			get
			{
				return this._SubjectVN;
			}
			set
			{
				if ((this._SubjectVN != value))
				{
					this.OnSubjectVNChanging(value);
					this.SendPropertyChanging();
					this._SubjectVN = value;
					this.SendPropertyChanged("SubjectVN");
					this.OnSubjectVNChanged();
				}
			}
		}
		
		[Column(Storage="_SubjectEN", DbType="VarChar(500)")]
		public string SubjectEN
		{
			get
			{
				return this._SubjectEN;
			}
			set
			{
				if ((this._SubjectEN != value))
				{
					this.OnSubjectENChanging(value);
					this.SendPropertyChanging();
					this._SubjectEN = value;
					this.SendPropertyChanged("SubjectEN");
					this.OnSubjectENChanged();
				}
			}
		}
		
		[Column(Storage="_ContentVN", DbType="NVarChar(1000)")]
		public string ContentVN
		{
			get
			{
				return this._ContentVN;
			}
			set
			{
				if ((this._ContentVN != value))
				{
					this.OnContentVNChanging(value);
					this.SendPropertyChanging();
					this._ContentVN = value;
					this.SendPropertyChanged("ContentVN");
					this.OnContentVNChanged();
				}
			}
		}
		
		[Column(Storage="_ContentEN", DbType="VarChar(1000)")]
		public string ContentEN
		{
			get
			{
				return this._ContentEN;
			}
			set
			{
				if ((this._ContentEN != value))
				{
					this.OnContentENChanging(value);
					this.SendPropertyChanging();
					this._ContentEN = value;
					this.SendPropertyChanged("ContentEN");
					this.OnContentENChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="TinyInt")]
		public System.Nullable<byte> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_PostedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostedDate
		{
			get
			{
				return this._PostedDate;
			}
			set
			{
				if ((this._PostedDate != value))
				{
					this.OnPostedDateChanging(value);
					this.SendPropertyChanging();
					this._PostedDate = value;
					this.SendPropertyChanged("PostedDate");
					this.OnPostedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PostedBy", DbType="VarChar(50)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[Column(Storage="_EndedBy", DbType="VarChar(50)")]
		public string EndedBy
		{
			get
			{
				return this._EndedBy;
			}
			set
			{
				if ((this._EndedBy != value))
				{
					this.OnEndedByChanging(value);
					this.SendPropertyChanging();
					this._EndedBy = value;
					this.SendPropertyChanged("EndedBy");
					this.OnEndedByChanged();
				}
			}
		}
		
		[Column(Storage="_EndedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndedDate
		{
			get
			{
				return this._EndedDate;
			}
			set
			{
				if ((this._EndedDate != value))
				{
					this.OnEndedDateChanging(value);
					this.SendPropertyChanging();
					this._EndedDate = value;
					this.SendPropertyChanged("EndedDate");
					this.OnEndedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblProduct")]
	public partial class tblProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ProductNo;
		
		private System.Nullable<System.Guid> _CategoryID;
		
		private string _ProductNameVN;
		
		private string _ProductNameEN;
		
		private string _Description;
		
		private System.Nullable<int> _PriceVN;
		
		private System.Nullable<double> _PriceEN;
		
		private System.Data.Linq.Binary _Image;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<bool> _Deleted;
		
		private EntityRef<tblCategory> _tblCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnProductNoChanging(string value);
    partial void OnProductNoChanged();
    partial void OnCategoryIDChanging(System.Nullable<System.Guid> value);
    partial void OnCategoryIDChanged();
    partial void OnProductNameVNChanging(string value);
    partial void OnProductNameVNChanged();
    partial void OnProductNameENChanging(string value);
    partial void OnProductNameENChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceVNChanging(System.Nullable<int> value);
    partial void OnPriceVNChanged();
    partial void OnPriceENChanging(System.Nullable<double> value);
    partial void OnPriceENChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public tblProduct()
		{
			this._tblCategory = default(EntityRef<tblCategory>);
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProductNo", DbType="VarChar(100)")]
		public string ProductNo
		{
			get
			{
				return this._ProductNo;
			}
			set
			{
				if ((this._ProductNo != value))
				{
					this.OnProductNoChanging(value);
					this.SendPropertyChanging();
					this._ProductNo = value;
					this.SendPropertyChanged("ProductNo");
					this.OnProductNoChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._tblCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProductNameVN", DbType="NVarChar(200)")]
		public string ProductNameVN
		{
			get
			{
				return this._ProductNameVN;
			}
			set
			{
				if ((this._ProductNameVN != value))
				{
					this.OnProductNameVNChanging(value);
					this.SendPropertyChanging();
					this._ProductNameVN = value;
					this.SendPropertyChanged("ProductNameVN");
					this.OnProductNameVNChanged();
				}
			}
		}
		
		[Column(Storage="_ProductNameEN", DbType="VarChar(200)")]
		public string ProductNameEN
		{
			get
			{
				return this._ProductNameEN;
			}
			set
			{
				if ((this._ProductNameEN != value))
				{
					this.OnProductNameENChanging(value);
					this.SendPropertyChanging();
					this._ProductNameEN = value;
					this.SendPropertyChanged("ProductNameEN");
					this.OnProductNameENChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_PriceVN", DbType="Int")]
		public System.Nullable<int> PriceVN
		{
			get
			{
				return this._PriceVN;
			}
			set
			{
				if ((this._PriceVN != value))
				{
					this.OnPriceVNChanging(value);
					this.SendPropertyChanging();
					this._PriceVN = value;
					this.SendPropertyChanged("PriceVN");
					this.OnPriceVNChanged();
				}
			}
		}
		
		[Column(Storage="_PriceEN", DbType="Float")]
		public System.Nullable<double> PriceEN
		{
			get
			{
				return this._PriceEN;
			}
			set
			{
				if ((this._PriceEN != value))
				{
					this.OnPriceENChanging(value);
					this.SendPropertyChanging();
					this._PriceEN = value;
					this.SendPropertyChanged("PriceEN");
					this.OnPriceENChanged();
				}
			}
		}
		
		[Column(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="VarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[Association(Name="tblCategory_tblProduct", Storage="_tblCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public tblCategory tblCategory
		{
			get
			{
				return this._tblCategory.Entity;
			}
			set
			{
				tblCategory previousValue = this._tblCategory.Entity;
				if (((previousValue != value) 
							|| (this._tblCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCategory.Entity = null;
						previousValue.tblProducts.Remove(this);
					}
					this._tblCategory.Entity = value;
					if ((value != null))
					{
						value.tblProducts.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("tblCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
